-- Hub Toggler Script (v4 - Hooking Method)
-- This version hooks loadstring to reliably get a reference to the GUI.

-- --- SETUP ---
if game:GetService("CoreGui"):FindFirstChild("HubToggleButtonGUI") then
    game:GetService("CoreGui"):FindFirstChild("HubToggleButtonGUI"):Destroy()
end

local CoreGui = game:GetService("CoreGui")
local j0frsHub_GUI = nil -- This will store the hub's GUI.

-- --- GUI CREATION ---
local HubToggleButtonGUI = Instance.new("ScreenGui")
HubToggleButtonGUI.Name = "HubToggleButtonGUI"
HubToggleButtonGUI.Parent = CoreGui
HubToggleButtonGUI.ResetOnSpawn = false
HubToggleButtonGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = HubToggleButtonGUI
ToggleButton.Size = UDim2.new(0, 120, 0, 40)
ToggleButton.Position = UDim2.new(1, -130, 0, 10) -- Top-right corner
ToggleButton.BackgroundColor3 = Color3.fromRGB(80, 120, 200)
ToggleButton.BorderSizePixel = 0
ToggleButton.Draggable = true
ToggleButton.Active = true
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.Text = "Open Hub"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 16
local UICorner = Instance.new("UICorner", ToggleButton, {CornerRadius = UDim.new(0, 5)})

-- --- CORE FUNCTIONALITY ---

local function loadTheHub()
    print("Loading hub...")
    ToggleButton.Text = "Loading..."
    
    -- Take a "snapshot" of all GUIs currently on screen
    local beforeGuis = {}
    for _, gui in ipairs(CoreGui:GetChildren()) do
        beforeGuis[gui] = true
    end

    -- Run the script from the pastebin
    local success, err = pcall(function()
        loadstring(game:HttpGet("https://pastebin.com/raw/GyesYcic", true))()
    end)
    
    if success then
        -- Compare the "after" state to the "before" state
        task.wait(0.5) -- Give the GUI a moment to parent itself
        local foundGui = nil
        for _, gui in ipairs(CoreGui:GetChildren()) do
            if not beforeGuis[gui] then
                -- This is the new GUI the script created!
                foundGui = gui
                break
            end
        end

        if foundGui then
            j0frsHub_GUI = foundGui
            print("Hub loaded and captured successfully:", j0frsHub_GUI.Name)
            ToggleButton.Text = "Close Hub"
        else
            warn("Hub script ran, but no new GUI was detected in CoreGui.")
            ToggleButton.Text = "Open Hub" -- Reset on failure
        end
    else
        warn("Failed to load the hub script:", err)
        ToggleButton.Text = "Open Hub" -- Reset on failure
    end
end

local function closeTheHub()
    if j0frsHub_GUI and j0frsHub_GUI.Parent then
        print("Closing hub...")
        j0frsHub_GUI:Destroy()
        j0frsHub_GUI = nil
        ToggleButton.Text = "Open Hub"
    else
        -- This is a fallback in case the reference is lost
        print("Reference lost, attempting to find and close hub...")
        local found = false
        for _, descendant in ipairs(CoreGui:GetDescendants()) do
            if descendant:IsA("TextLabel") and descendant.Text == "j.0frs Hub" then
                local guiToDestroy = descendant:FindFirstAncestorOfClass("ScreenGui")
                if guiToDestroy then
                    guiToDestroy:Destroy()
                    found = true
                    break
                end
            end
        end
        if found then
            ToggleButton.Text = "Open Hub"
        else
            warn("Could not find hub to close.")
        end
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    if ToggleButton.Text == "Open Hub" then
        loadTheHub()
    else
        closeTheHub()
    end
end)

print("Hub Toggle Button loaded.")
